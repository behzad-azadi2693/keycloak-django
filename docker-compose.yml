version : '3.9'

services:
  postgres:
    image: postgres
    hostname: ${POSTGRES_HOST}
    container_name: ${POSTGRES_HOST}
    command: -p ${POSTGRES_PORT}
    restart: on-failure
    environment: 
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes: 
      - ./data/postgres:/var/lib/postgresql/data 
    networks: 
      - web_network

  redis:
    image: redis
    hostname: ${REDIS_HOST}
    container_name: redis_account
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    restart: on-failure
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    volumes:
      - ./redis.conf:/usr/local/etc/redis.conf
    networks:
      - account_network

  accounts:
    build: .
    image: accounts_service_image
    container_name: account_container
    hostname: ${ACCOUNT_HOST}
    restart: on-failure
    command: sh -c "python3 manage.py makemigrations && 
                    python3 manage.py migrate --no-input && 
                    python3 manage.py collectstatic --no-input && 
                    gunicorn -k gevent --workers 4 config.wsgi:application -b 0.0.0.0:${DJANGO_PORT}"
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}   
    volumes:
      - .:/accounts
    networks:
      - account_network
      - keycloak_network

  celery-worker:
    build: .
    image: celery_account_image
    container_name: celery_account_container
    hostname: celery_account
    command: bash -c " celery -A config worker -l info "
    environment:
      - BROKER_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0
      - RESULT_BACKEND=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0
    restart: on-failure
    depends_on:
      - accounts
      - redis
    volumes:
      - .:/accounts
    networks:
      - account_network


networks:
  account_network:

  keycloak_network:
    external: true
